#!/bin/bash

source "${BASH_SOURCE%/*}/../lib/common.bash" || exit 1

input_zones_file=''

kmlpipe_usage_define <<EOF
For each zone in the zones file provided on standard input, fetches property
listings from Nestoria using the zone coordinates and radius. Merges the results
into a single KML folder on standard output. Equivalent to running
search-listings, merge-documents and merge-folders on each zone.

In addition, the output will also contain folders from the original zone file,
as well as a 'Nestoria Zone' link set that contains one link pointing back to
the zone each place was found in.

  --input-zones-file FILE (required)
    Path to the input KML file containing zone definitions.

Any parameters after -- are passed down to search-listings.

Example:

$ search-listings-zones -- -- \\
	--max-pages 3 -- \\
	--data 'listing_type=buy' --data 'price_max=1000000' \\
	--data 'number_of_results=50 < zones.kml'
EOF

while :
do
        kmlpipe_args_pop_or_error argument
        case "$argument" in
		--input-zones-file) kmlpipe_args_pop_or_error input_zones_file;;
                --) break;;
                *) kmlpipe_usage_error;;
        esac
done
[[ -n "$input_zones_file" ]] || kmlpipe_usage_error
additional_args=("${kmlpipe_args_stack[@]}")
[[ "${#additional_args[@]}" -gt 0 ]] || kmlpipe_usage_error

kmlpipe_create_tmpdir

zone_count=0
while read -r zone_id longlat radius_miles
do
	if [[ -z "$zone_id" ]]
	then
		kmlpipe_error 'missing zone place ID in zone file'
	fi
	if [[ -z "$longlat" ]]
	then
		kmlpipe_error "missing coordinates for $zone_id in zone file"
	fi
	if [[ -z "$radius_miles" ]]
	then
		kmlpipe_error "missing miles radius for $zone_id in zone file"
	fi

	longitude="${longlat%,*}"
	latitude="${longlat#*,}"

	kmlpipe_info "Fetching listings in $zone_id ($longlat $radius_miles miles)"
	"$kmlpipe_script_dir/search-listings" "${additional_args[@]}" \
		--data "radius=$latitude,$longitude,${radius_miles}mi" |
	kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/rename-folder.xsl" -s "new-folder-name=Nestoria Listings for zone $zone_id" |
	kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/link-addset.xsl" -s 'link-set-name=Nestoria Zone' |
	kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/link-add.xsl" -s 'link-set-name=Nestoria Zone' -s "destination-place-id=$zone_id" \
		> "$kmlpipe_tmpdir/nestoria-listings.zone$zone_count.kml"

	zone_count="$(( zone_count + 1 ))"
done < <(kmlpipe_xmlstarlet sel \
	-N 'kml=http://www.opengis.net/kml/2.2' -N 'kmlpipe=http://edechamps.fr/kmlpipe' --template \
		--match '/kml:kml/kml:Document/kml:Folder/kml:Placemark' \
		--value-of 'kmlpipe:Place/@place-id' --output ' ' --value-of 'kml:Point/kml:coordinates' --output ' ' --value-of 'kmlpipe:Radius/@miles' --nl "$input_zones_file"
)

kmlpipe_info "Done fetching listings for $zone_count zones"

if [[ "$zone_count" -eq 0 ]]
then
	kmlpipe_error 'no zones fetched'
fi

"$kmlpipe_dir/util/merge-documents" -- "$kmlpipe_tmpdir/nestoria-listings.zone"*'.kml' |
kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/merge-folders.xsl" |
kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/rename-folder.xsl" -s 'new-folder-name=Nestoria Listings' \
> "$kmlpipe_tmpdir/nestoria-listings.kml"

"$kmlpipe_dir/util/merge-documents" -- "$input_zones_file" "$kmlpipe_tmpdir/nestoria-listings.kml" |
kmlpipe_output_xml
