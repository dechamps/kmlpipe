#!/bin/bash

source "${BASH_SOURCE%/*}/../lib/common.bash" || exit 1

google_key=''
cache_directory=''
updated_min=''
diff_against=''
production_mode=''

kmlpipe_usage_define <<EOF
Runs the full, end-to-end Edechamps Home Hunt pipeline.

  --google-key =KEY (required)
  --google-key @KEY (required)
    Google API Key.

  --cache-directory DIR (required)
    Reusable cache directory (e.g. for distance calculations).

  --updated-min UNIX_TIMESTAMP
    Only query for listings that were updated after this time.

  --diff-against FILE
    Only output listings that don't appear in the specified result file.

  --production
    Production mode: request the full set of listings from all
    production zones. CAUTION: can trigger a significant amount
    of external requests.
EOF

while :
do
	if ! kmlpipe_args_pop argument
	then
		break
	fi
	case "$argument" in
		--google-key) kmlpipe_args_pop_or_error google_key;;
		--cache-directory) kmlpipe_args_pop_or_error cache_directory;;
		--updated-min) kmlpipe_args_pop_or_error updated_min;;
		--diff-against) kmlpipe_args_pop_or_error diff_against;;
		--production) production_mode='true';;
		--) break;;
		*) kmlpipe_usage_error;;
	esac
done
[[ -n "$google_key" ]] || kmlpipe_usage_error
[[ -n "$cache_directory" ]] || kmlpipe_usage_error
kmlpipe_args_end

kmlpipe_create_tmpdir

run_cached() {
	local step="$1"
	shift
	local script="$1"
	shift

	local step_cache_directory="$cache_directory/$step"
	if ! [[ -d "$step_cache_directory" ]]
	then
		kmlpipe_info "no cache found for step $step, starting from scratch"
		mkdir "$step_cache_directory"
	fi

	"$script" --cache-directory "$step_cache_directory" "$@"
}

zones_file="$kmlpipe_script_dir/zones.kml"
pages_per_zone=1
listings_per_page=5
if [[ "$production_mode" = 'true' ]]
then
	zones_file="$kmlpipe_script_dir/zones.production.kml"
	pages_per_zone=20
	listings_per_page=50
fi

run_cached get-supermarkets "$kmlpipe_script_dir/get-supermarkets" \
	--sainsburys-file "$kmlpipe_dir/sainsburys/sainsburys-london-main-closest25-20190504.json" --google-key "$google_key" \
	> "$kmlpipe_tmpdir/supermarkets.kml"

"$kmlpipe_script_dir/get-hyperoptic" --input-zones-file "$zones_file" --zone-fudge-miles 0.25 < "$kmlpipe_dir/hyperoptic/hyperoptic-london-20190428.json" > "$kmlpipe_tmpdir/hyperoptic.kml"

get_listings_args=( \
	--input-zones-file "$zones_file" \
        --listing-type buy --price-max 1100000 --bedroom-min 1 \
        --max-listings-pages-per-zone "$pages_per_zone" --max-listings-per-page "$listings_per_page" --sort newest \
)
if [[ -n "$updated_min" ]]
then
	get_listings_args+=(--updated-min "$updated_min")
fi
"$kmlpipe_script_dir/get-listings" "${get_listings_args[@]}" > "$kmlpipe_tmpdir/listings.kml"

if [[ -n "$diff_against" ]]
then
	kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/merge-folder.xsl" -s 'source-folder-name=Nestoria Listings' -s 'destination-folder-name=Previous Nestoria Listings' < "$diff_against" |
	kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/trim-folders.xsl" -s 'folder-name=Previous Nestoria Listings' -s 'obliterate=true' > "$kmlpipe_tmpdir/previous.kml"

	"$kmlpipe_dir/util/merge-documents" -- "$kmlpipe_tmpdir/listings.kml" "$kmlpipe_tmpdir/previous.kml" |
	kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/folder-difference.xsl" -s 'remove-from-folder-name=Nestoria Listings' -s 'compare-against-folder-name=Previous Nestoria Listings' -s 'obliterate=true' > "$kmlpipe_tmpdir/listings-diff.kml"
	mv "$kmlpipe_tmpdir/listings-diff.kml" "$kmlpipe_tmpdir/listings.kml"
fi

run_cached widen "$kmlpipe_script_dir/widen" \
	--input-listings-file "$kmlpipe_tmpdir/listings.kml" --input-workplace-file "$kmlpipe_script_dir/workplace.kml" --input-supermarkets-file "$kmlpipe_tmpdir/supermarkets.kml" --input-hyperoptic-file "$kmlpipe_tmpdir/hyperoptic.kml" \
	--google-key "$google_key" |
kmlpipe_xmlstarlet tr "$kmlpipe_script_dir/compute-partial-scores.xsl" \
	-s 'commute-allowance-minutes=10' -s 'penalty-per-commute-minute=1' -s 'max-commute-minutes=35' \
	-s 'supermarket-allowance-minutes=5' -s 'penalty-per-supermarket-minute=2' -s 'max-supermarket-minutes=15' \
	-s 'hyperoptic-penalty-per-meter=0.02' -s 'hyperoptic-max-penalty=5' \
	-s "keywords-file=$(realpath --canonicalize-existing -- "$kmlpipe_script_dir/keywords.xml")" |
kmlpipe_xmlstarlet tr "$kmlpipe_script_dir/compute-total-scores.xsl" |
kmlpipe_xmlstarlet tr "$kmlpipe_script_dir/present.xsl" |
kmlpipe_output_xml

