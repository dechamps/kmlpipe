#!/bin/bash

source "${BASH_SOURCE%/*}/../lib/common.bash" || exit 1

output_prefix=''
max_pages=1

kmlpipe_parse_options <<EOF
Sends a Place Search Google Maps API request, and converts the results to a
single KML document on standard output, with one folder per page. Equivalent to
running paginate, place-search-response-to-kml and merge.

Any parameters after -- are passed down to paginate.

This script works with the Nearby Search and Text Search Google Maps APIs. For
a description of these APIs, including the parameters you need to provide, see
https://developers.google.com/places/web-service/search.

The following example will search for Waitroses near the center of London:

$ place-search -- \\
	--max-pages 2 -- --get \\
	--data 'key=<YOUR GOOGLE API KEY HERE>' \\
	--data 'location=51.540,-0.093' --data 'radius=10000' \\
	--data 'keyword=waitrose' \\
	https://maps.googleapis.com/maps/api/place/nearbysearch/xml
EOF
set -- "${kmlpipe_args[@]}"

while :
do
	arg="$1"
	shift
	case "$arg" in
		'--') break;;
		*) kmlpipe_usage_error "unhandled option: $1";;
	esac
done
additional_args=("$@")

[[ "${#additional_args[@]}" -gt 0 ]] || kmlpipe_usage_error 'must specify arguments for paginate'

kmlpipe_create_tmpdir

"${BASH_SOURCE%/*}/paginate" --output-prefix "$kmlpipe_tmpdir/page" "${additional_args[@]}"

for page in "$kmlpipe_tmpdir"/page.*.google.list.xml
do
	page_number="${page##*/page.}"
	page_number="${page_number%.google.list.xml}"
	kmlpipe_xmlstarlet tr "${BASH_SOURCE%/*}/place-search-response-to-kml.xsl" -s "folder-name=Google Place Search Results Page $page_number" "$page" > "$page.kml"
done

"${BASH_SOURCE%/*}/../util/merge" "$kmlpipe_tmpdir"/page.*.google.list.xml.kml |
kmlpipe_output_xml

