#!/bin/bash

source "${BASH_SOURCE%/*}/../lib/common.bash" || exit 1

output_prefix=''
max_pages=1

kmlpipe_usage_define <<EOF
Sends a Place Search Google Maps API request, and converts the results to a
single KML document on standard output, with one folder per page. Equivalent to
running paginate, place-search-response-to-kml and merge.

Any parameters after -- are passed down to paginate.

This script works with the Nearby Search and Text Search Google Maps APIs. For
a description of these APIs, including the parameters you need to provide, see
https://developers.google.com/places/web-service/search.

The following example will search for Waitroses near the center of London:

$ place-search -- \\
	--max-pages 2 -- --get \\
	--data 'key=<YOUR GOOGLE API KEY HERE>' \\
	--data 'location=51.540,-0.093' --data 'radius=10000' \\
	--data 'keyword=waitrose' \\
	https://maps.googleapis.com/maps/api/place/nearbysearch/xml
EOF

while :
do
        kmlpipe_args_pop_or_error argument
        case "$argument" in
                --) break;;
                *) kmlpipe_usage_error;;
        esac
done
additional_args=("${kmlpipe_args_stack[@]}")
[[ "${#additional_args[@]}" -gt 0 ]] || kmlpipe_usage_error

kmlpipe_create_tmpdir

"$kmlpipe_script_dir/paginate" --output-prefix "$kmlpipe_tmpdir/page" "${additional_args[@]}"

for page in "$kmlpipe_tmpdir"/page.*.google.list.xml
do
	page_number="${page##*/page.}"
	page_number="${page_number%.google.list.xml}"
	kmlpipe_xmlstarlet tr "$kmlpipe_script_dir/place-search-response-to-kml.xsl" "$page" |
	kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/rename-folder.xsl" -s "new-folder-name=Google Place Search Results Page $page_number" > "$page.kml"
done

"$kmlpipe_dir/util/merge-documents" -- "$kmlpipe_tmpdir"/page.*.google.list.xml.kml |
kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/merge-folders.xsl" |
kmlpipe_xmlstarlet tr "$kmlpipe_dir/util/rename-folder.xsl" -s "new-folder-name=Google Place Search Results" |
kmlpipe_output_xml

