#!/bin/bash

source "${BASH_SOURCE%/*}/../lib/common.bash" || exit 1

kmlpipe_usage_define <<EOF
Merges multiple KML files together. Equivalent to running
merge-documents.xsl in sequence for each input file.
Can merge any number of KML files together, not just 2.
EOF

while :
do
        kmlpipe_args_pop_or_error argument
        case "$argument" in
                --) break;;
                *) kmlpipe_usage_error;;
        esac
done
kml_files=("${kmlpipe_args_stack[@]}")
[[ "${#kml_files[@]}" -gt 0 ]] || kmlpipe_usage_error 'at least one KML file must be specified'

base_kml_file="${kml_files[0]}"

if [[ "${#kml_files[@]}" -gt 1 ]]
then
	kmlpipe_create_tmpdir

	destination_kml_file="$kmlpipe_tmpdir/merged.kml"
	index=1
	for kml_file in "${kml_files[@]:1}"
	do
		# The semantics of relative URIs in XSLT document() will not match user expectations,
		# so we make sure all external document paths are absolute.
		kmlpipe_xmlstarlet tr "$kmlpipe_script_dir/merge-documents.xsl" -s "from=$(realpath --canonicalize-existing -- "$kml_file")" "$base_kml_file" > "$destination_kml_file.new"
		mv "$destination_kml_file.new" "$destination_kml_file"
		base_kml_file="$destination_kml_file"
		index="$(( index + 1 ))"
	done
fi

kmlpipe_output_xml < "$base_kml_file"

